trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  newVersion: '4.2.10.1'

steps:
- checkout: self
  lfs: true
  clean: true

- task: PowerShell@2
  displayName: 'Modify PublicVersion'
  inputs:
    targetType: 'inline'
    script: |
      $file = "sources/shared/SharedAssemblyInfo.cs"
      $content = Get-Content $file -Raw
      $content = $content -replace 'public const string PublicVersion = "4\.2\.1\.1";', 'public const string PublicVersion = "$(newVersion)";'
      Set-Content $file $content -NoNewline
      Get-Content $file | Select-String -Pattern "PublicVersion"

- task: UseDotNet@2
  displayName: 'Install .NET 8.0'
  inputs:
    packageType: 'sdk'
    version: '8.0.x'

- task: MSBuild@1
  displayName: 'Build Assembly Processor'
  inputs:
    solution: 'sources/core/Stride.Core.AssemblyProcessor/Stride.Core.AssemblyProcessor.csproj'
    msbuildArguments: '/restore /p:Configuration=$(buildConfiguration)'
    configuration: '$(buildConfiguration)'

- task: MSBuild@1
  displayName: 'Build Stride Solution'
  inputs:
    solution: 'build/Stride.sln'
    msbuildArguments: '-restore -m:1 -nr:false -v:m -p:WarningLevel=0 -p:Configuration=$(buildConfiguration) -p:StridePlatforms=Windows -p:StrideGraphicsApiDependentBuildAll=true -p:StrideSkipUnitTests=true -p:StrideSkipAutoPack=true'
    configuration: '$(buildConfiguration)'
    maximumCpuCount: false

# Find where the build output actually is
- task: PowerShell@2
  displayName: 'Locate Build Output'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Searching for build output directories..."
      
      # Check common locations
      $locations = @(
        "Bin",
        "bin",
        "sources\editor\Stride.GameStudio\bin",
        "Build"
      )
      
      foreach ($loc in $locations) {
        if (Test-Path $loc) {
          Write-Host "Found: $loc"
          Get-ChildItem $loc -Recurse -Directory | Select-Object -First 20 | ForEach-Object {
            Write-Host "  - $($_.FullName)"
          }
        }
      }
      
      # Look specifically for GameStudio
      Write-Host "`nSearching for GameStudio output..."
      Get-ChildItem -Path "sources" -Filter "Stride.GameStudio.exe" -Recurse -ErrorAction SilentlyContinue | ForEach-Object {
        Write-Host "Found GameStudio at: $($_.FullName)"
      }

# Publish the GameStudio build output specifically
- task: PublishBuildArtifacts@1
  displayName: 'Publish GameStudio Binaries'
  inputs:
    PathtoPublish: 'sources/editor/Stride.GameStudio/bin/$(buildConfiguration)/net8.0-windows'
    ArtifactName: 'gamestudio'
    publishLocation: 'Container'
  condition: succeeded()

# Publish all compiled binaries
- task: PublishBuildArtifacts@1
  displayName: 'Publish All Binaries (sources)'
  inputs:
    PathtoPublish: 'sources'
    ArtifactName: 'stride-sources-output'
    publishLocation: 'Container'
  condition: succeeded()
  continueOnError: true